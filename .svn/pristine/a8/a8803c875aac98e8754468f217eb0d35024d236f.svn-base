//
//  RBModifySexViewController+TableView.swift
//  rbstore
//
//  Created by 120v on 2017/7/20.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

extension RBModifySexViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        //        self.tableView.reloadData()
        let newCell: UITableViewCell = tableView.cellForRow(at: indexPath)!
        if newCell.accessoryType == UITableViewCellAccessoryType.none {
            newCell.accessoryType = UITableViewCellAccessoryType.checkmark
            newCell.textLabel?.textColor = UIColor.zx_tintColor
        }else if newCell.accessoryType == UITableViewCellAccessoryType.checkmark {
            newCell.accessoryType = UITableViewCellAccessoryType.none
            newCell.textLabel?.textColor = UIColor.zx_textColorTitle
        }
    }
    
    func tableView(_ tableView: UITableView, didDeselectRowAt indexPath: IndexPath) {
        let oldCell: UITableViewCell = tableView.cellForRow(at: indexPath)!
        if oldCell.accessoryType == UITableViewCellAccessoryType.checkmark {
            oldCell.accessoryType = UITableViewCellAccessoryType.none
            oldCell.textLabel?.textColor = UIColor.zx_textColorTitle
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 52.0
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return CGFloat.leastNormalMagnitude
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 15.0
    }


}

extension RBModifySexViewController: UITableViewDataSource {
    
    
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 2
    }
    
    
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let rootCell: RBModifySexCell = tableView.dequeueReusableCell(withIdentifier: RBModifySexCell.RBModifySexCellID, for: indexPath) as! RBModifySexCell
        
        return rootCell
    }
    

    
    
}
