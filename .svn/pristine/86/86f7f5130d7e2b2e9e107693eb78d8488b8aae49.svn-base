//
//  LoginViewController.swift
//  rbstore
//
//  Created by screson on 2017/7/19.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

class ZXLoginViewController: ZXUIViewController {
    static func show(_ success:(() -> Void)?,_ failure:((_ code:Int,_ msg:String) -> Void)?) {
        let sb = UIStoryboard.init(name: "ZXLoginStoryBoard", bundle: nil)
        if let nav = sb.instantiateInitialViewController() {
            ZXRootController.selectedNav().present(nav, animated: true, completion: nil)
        }
    }
    
    @IBOutlet weak var lbTel: UILabel!
    @IBOutlet weak var lbPwd: UILabel!
    @IBOutlet weak var txtTel: UITextField!
    @IBOutlet weak var txtPwd: UITextField!
    @IBOutlet weak var btnShowPwd: UIButton!
    
    @IBOutlet weak var btnCommit: UIButton!
    @IBOutlet weak var btnRetriverPwd: UIButton!
    @IBOutlet weak var btnTelCodeLogin: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
        self.zx_addNavBarButtonItems(textNames: ["注册"], font: nil, color: nil, at: .right)
        self.zx_addNavBarButtonItems(textNames: ["关闭"], font: nil, color: nil, at: .left)
        
        self.lbTel.font = UIFont.zx_bodyFont
        self.lbTel.textColor = UIColor.zx_textColorTitle
        self.lbPwd.font = UIFont.zx_bodyFont
        self.lbPwd.textColor = UIColor.zx_textColorTitle
        
        self.txtTel.textColor = UIColor.zx_textColorTitle
        self.txtTel.font = UIFont.zx_bodyFont
        self.txtPwd.textColor = UIColor.zx_textColorTitle
        self.txtPwd.font = UIFont.zx_bodyFont
        
        self.btnCommit.backgroundColor = UIColor.zx_tintColor
        self.btnCommit.titleLabel?.font = UIFont.zx_titleFont
        
        self.btnRetriverPwd.setTitleColor(UIColor.zx_tintColor, for: .normal)
        self.btnRetriverPwd.titleLabel?.font = UIFont.zx_bodyFont
        
        self.btnTelCodeLogin.setTitleColor(UIColor.zx_tintColor, for: .normal)
        self.btnTelCodeLogin.titleLabel?.font = UIFont.zx_bodyFont
        
        self.txtTel.delegate = self
        self.txtPwd.delegate = self
        
        self.btnCommit.isEnabled = false
    }
    
    override func zx_leftBarButtonAction(index: Int) {
        self.dismiss(animated: true, completion: nil)
    }
    
    override func zx_rightBarButtonAction(index: Int) {
        self.performSegue(withIdentifier: "ZXRegist", sender: nil)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */
}

extension ZXLoginViewController: UITextFieldDelegate {
    
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        if textField == self.txtTel {
            let cs = CharacterSet.init(charactersIn: "0123456789").inverted
            let filtered = string.components(separatedBy: cs).joined(separator: "")
            if string != filtered {
                return false
            }
            if range.location > 10 {
                return false
            }
            let str = textField.text ?? ""
            let str2 = (str as NSString).replacingCharacters(in: range, with: string)
            if str2.characters.count == 1 && str2 != "1" {
                return false
            }
            if range.location == 10 && str2.characters.count == 11 {
                self.txtTel.text = str2
                self.txtPwd.becomeFirstResponder()
                
                return false
            }
        } else {
            let cs = CharacterSet.init(charactersIn: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz").inverted
            let filtered = string.components(separatedBy: cs).joined(separator: "")
            if string != filtered {
                return false
            }
            
            if range.location > 15 {
                return false
            }
        }
        return true
    }
    
    fileprivate func checkCommitButtonEnable() {
        if let tel = self.txtTel.text,let pwd = self.txtPwd.text,tel.characters.count > 0,pwd.characters.count > 0 {
            self.btnCommit.isEnabled = true
        } else {
            self.btnCommit.isEnabled = false
        }
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        self.view.endEditing(true)
        return true
    }
}
