//
//  ZXRouter+RemoteNotification.swift
//  YDY_GJ_3_5
//
//  Created by screson on 2017/4/17.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

enum ZXRemoteNoticeType {
    case newNotice,newOrder,drugReview,unknown
}

class ApsModel:NSObject {
    var alert:String = ""
    var badge:Int = 0
}

class ZXRemoteNoticeModel:NSObject {
    static var lastNoticeInfo:Dictionary<String,Any>?
    var aps = ApsModel()
    var pushId = ""
    var pushType = ""       //文本
    var remindTime = ""     //提醒时间
    var drugstoreId = ""    //店铺ID
    var drugstoreName = ""  //店铺名称
    
    var fromUserTap = false
    var noticeType:ZXRemoteNoticeType {
        get{
            if pushType == "order" {
                return  .newOrder
            } else if pushType == "notice" {
                return .newNotice
            } else if pushType == "drugreview" {
                return .drugReview
            }
            return .unknown
        }
    }
    
//    override static func mj_objectClassInArray() -> [AnyHashable : Any]! {
//        return ["aps":ApsModel.classForCoder()]
//    }
    
}


extension ZXRouter {
    
    static func showNotice(_ infoDic:Dictionary<String,Any>?) {
//        if let infoDic = infoDic{
//            let noticeModel = ZXRemoteNoticeModel.mj_object(withKeyValues: infoDic)
//            let rootvc = UIApplication.shared.keyWindow?.rootViewController
//            if rootvc == ZXRootController.zx_tabbarVC() {
//                var selectedVc = ZXRootController.zx_tabbarVC().selectedViewController
//                var nav:UIViewController?
//                if ZXRootController.zx_tabbarVC().presentedViewController != nil{
//                    selectedVc = ZXRootController.zx_tabbarVC().presentedViewController
//                }
//                if let navVC = selectedVc as? UINavigationController {
//                    nav = navVC
//                    selectedVc = navVC.viewControllers.first
//                }else{
//                    nav = selectedVc?.navigationController
//                }
//                
//                if selectedVc is GJLoginRootViewController ||
//                    selectedVc is GJLoginNavigationController ||
//                    selectedVc is GJGetVerCodeViewController ||
//                    selectedVc is GJLaunchViewController{
//                    ZXRemoteNoticeModel.lastNoticeInfo = infoDic
//                    return
//                }
//                
//                if let nav = nav as? UINavigationController {
//                    ZXRemoteNoticeModel.lastNoticeInfo = nil
//                    if noticeModel?.noticeType == .unknown {
//                        ZXAudioUtils.vibrate()
//                        ZXAlertUtils.showAlert(withTitle: "新消息", message: noticeModel?.aps.alert)
//                    }else{
//                        ZXAudioUtils.vibrate()
//                        ZXAlertUtils.showAlert(wihtTitle: "新消息", message: noticeModel?.aps.alert, buttonTexts: ["忽略","马上查看"], action: { (index) in
//                            if index == 1 {
//                                if noticeModel?.noticeType == .newNotice {
//                                    if noticeModel?.drugstoreId != ZXGlobalData.storeId {
//                                        ZXAlertUtils.showAlert(wihtTitle: nil, message: "该公告属于[\(noticeModel?.drugstoreName ?? "")],请在个人中心切换药店后查看", buttonText: "好的", action: nil)
//                                    }else{
//                                        let detailVC:GJMessageDetailController = GJMessageDetailController.init()
//                                        detailVC.hidesBottomBarWhenPushed = true
//                                        detailVC.noticeId = noticeModel?.pushId ?? ""
//                                        nav.pushViewController(detailVC, animated: true)
//                                    }
//                                } else if noticeModel?.noticeType == .newOrder {
//                                    if noticeModel?.drugstoreId != ZXGlobalData.storeId {
//                                        ZXAlertUtils.showAlert(wihtTitle: nil, message: "该订单属于[\(noticeModel?.drugstoreName ?? "")],请在个人中心切换药店后查看", buttonText: "好的", action: nil)
//                                    }else{
//                                        let detailVC = ZXOrderDetailViewController()
//                                        detailVC.orderId = noticeModel?.pushId ?? ""
//                                        nav.pushViewController(detailVC, animated: true)
//                                    }
//                                } else if noticeModel?.noticeType == .drugReview { //药品审核反馈
////                                    if noticeModel?.drugstoreId != ZXGlobalData.storeId {
////                                        ZXAlertUtils.showAlert(wihtTitle: nil, message: "该报错信息属于[\(noticeModel?.drugstoreName ?? "")],请在个人中心切换药店后查看", buttonText: "好的", action: nil)
////                                    }else{
////                                        let detailinfo = ZXReportDetailViewController()
////                                        detailinfo.reviewId = noticeModel?.pushId ?? ""
////                                        nav.pushViewController(detailinfo, animated: true)
////                                    }
//                                    let detailinfo = ZXReportDetailViewController()
//                                    detailinfo.reviewId = noticeModel?.pushId ?? ""
//                                    nav.pushViewController(detailinfo, animated: true)
//                                }
//                            }
//                        })
//                    }
//                }else{
//                    ZXRemoteNoticeModel.lastNoticeInfo = infoDic
//                    return
//                }
//            }else{
//                ZXRemoteNoticeModel.lastNoticeInfo = infoDic
//            }
//        }else{
//            ZXRemoteNoticeModel.lastNoticeInfo = nil
//        }
    }

    static func checkLastCacheRemoteNotice() {
        self.showNotice(ZXRemoteNoticeModel.lastNoticeInfo)
    }
    
}
