//
//  ZXRouter.swift
//  ZXStructs
//
//  Created by JuanFelix on 2017/4/7.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

enum ZXShowType {
    case activityList
    case categoryList
    case goodsDetail
    case messageDetail
    case messageList
    case webPage
    case orderDetail
    case shoppingCart
}

enum ZXLinkType:Int {
    case none = 999
    case category = 0
    case product = 1
    case activePage = 2
    case addToCart = 3
}

class ZXShowModel: NSObject {
    var showTilte:String = ""
    var showId:String = ""
    
    var zx_linkType:ZXLinkType { return ZXLinkType.none }
    
}

class ZXRouter: NSObject {
    class func changeRootViewController(_ rootVC:UIViewController!){
        ZXRootController.appWindow()?.rootViewController = rootVC
    }
    
    class func tabbarSelect(at index:Int) {
        if let tabbar = ZXRootController.zx_tabbarVC() {
            tabbar.selectedIndex = index
        }
    }
    
    class func tabbarShouldSelected(at index:Int) {
        if let tabbar = ZXRootController.zx_tabbarVC(),tabbar.delegate != nil {
            guard let controller = tabbar.viewControllers?[index] else {
                return
            }
            let _ = tabbar.delegate?.tabBarController!(tabbar, shouldSelect: controller)
        }
    }
    
    static func showDetail(type:ZXShowType,model:ZXShowModel?) {
        switch type {
            case .activityList:
                let activityList = ZXActivityViewController()
                activityList.title = model?.showTilte
                ZXRootController.selectedNav().pushViewController(activityList, animated: true)
            case .categoryList:
                let categoryList = RBCategoryListViewController()
                categoryList.title = model?.showTilte
                ZXRootController.selectedNav().pushViewController(categoryList, animated: true)
            case .goodsDetail:
                let goodsDetail = ZXGoodsDetailViewController()
                goodsDetail.title = model?.showTilte
                ZXRootController.selectedNav().pushViewController(goodsDetail, animated: true)
            case .messageList:
                ZXUser.checkLogin({
                    let messageList = RBMessageViewController()
                    ZXRootController.selectedNav().pushViewController(messageList, animated: true)
                })
            case .messageDetail:
                ZXUser.checkLogin({
//                    let specVC = ZXGoodsSpecViewController()
//                    ZXRootController.selectedNav().pushViewController(specVC, animated: true)
                })
            case .orderDetail:
                ZXUser.checkLogin({
                    let orderDetail = RBOrderDetailRootController()
                    ZXRootController.selectedNav().pushViewController(orderDetail, animated: true)
                })
            case .shoppingCart:
                ZXUser.checkLogin({
                    let spc = ZXShoppingCartViewController()
                    ZXRootController.selectedNav().pushViewController(spc, animated: true)
                })
            case .webPage:
                let webPage = ZXWebPageViewController()
                webPage.title = model?.showTilte
                ZXRootController.selectedNav().pushViewController(webPage, animated: true)
        }
    }
    
    static func showLinkType(_ type:ZXLinkType,model:ZXShowModel) {
        switch type {
            case .activePage:
                self.showDetail(type: .webPage, model: model)
            case .category:
                self.showDetail(type: .categoryList, model: model)
            case .product:
                self.showDetail(type: .goodsDetail, model: model)
            case .addToCart:
                if let specM = model as? ZXBSCartModel {
                    ZXBSControl.addToCart(specM)
                }
        default:
            break
        }
    }
    
    static func zx_backToHomePage() {
        ZXRouter.tabbarSelect(at: 0)
        ZXRootController.zx_nav(at: 1).popToRootViewController(animated: true)
        ZXRootController.zx_nav(at: 2).popToRootViewController(animated: true)
        ZXRootController.zx_nav(at: 3).popToRootViewController(animated: true)
    }
}
