//
//  RBHistoryCache.swift
//  rbstore
//
//  Created by 120v on 2017/7/31.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

let RB_Cache_UserHistory     =   "RBCacheUserHistroy"

class RBHistoryCache: NSObject {
    
    static var userId: String {
        get {
            return ZXUser.user.userId
        }
    }
    
    class func getCache() -> NSMutableArray {
        let userDefaults = UserDefaults.standard
        if let cacheList = userDefaults.object(forKey: RB_Cache_UserHistory) as? NSMutableArray {
            return cacheList
        }
        return NSMutableArray.init()
    }
    
    class func saveCache(_ historyArray: NSMutableArray) -> () {
        var dicStoreList:Dictionary<String,Any> = [:]
        let userDefaults = UserDefaults.standard
        dicStoreList[self.userId] = historyArray
        userDefaults.set(dicStoreList, forKey: RB_Cache_UserHistory)
        userDefaults.synchronize()
    }
    
    class func add(_ str: String) {
        
        if str.isEmpty {
            return
        }
        
        let userDefaults = UserDefaults.standard
        if let cacheList = userDefaults.object(forKey: RB_Cache_UserHistory) as? NSMutableArray {
            cacheList.add(str)
            self.saveCache(cacheList)
        }else{
            let histArray: NSMutableArray = NSMutableArray.init(capacity: 5)
            histArray.add(str)
            self.saveCache(histArray)
        }
    }
    
    class func removeAllObjects() {
        let userDefaults = UserDefaults.standard
        if let cacheList = userDefaults.object(forKey: RB_Cache_UserHistory) as? NSMutableArray {
            cacheList.removeAllObjects()
            userDefaults.removeObject(forKey: RB_Cache_UserHistory)
        }
    }
}


