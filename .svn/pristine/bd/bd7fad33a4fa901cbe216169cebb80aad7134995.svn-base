//
//  ZXCartViewModel.swift
//  rbstore
//
//  Created by screson on 2017/8/15.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

/// 购物车
class ZXCartViewModel: NSObject {
    
    /// 列表
    ///
    /// - Parameter completion: completion description
    static func getCartList(_ completion:((_ code:Int,_ success:Bool,_ list:[ZXCartModel]?,_ errorMsg:String) -> Void)?) {
        ZXNetwork.asyncRequest(withUrl: ZXAPI.address(image: ZXAPIConst.Cart.list), params: nil, method: .post) { (s, c, obj, js, error) in
            if c == ZXAPI_SUCCESS {
                if let data = obj["data"] as? Array<Dictionary<String,Any>>,data.count > 0 {
                    var list = [ZXCartModel]()
                    for dic in data {
                        list.append(ZXCartModel.mj_object(withKeyValues: dic))
                    }
                    completion?(c,true,list,"")
                } else {
                    completion?(c,true,[],"")
                }
            } else {
                completion?(c,false,nil,(error?.description)!)
            }
        }
    }
    
    /// 删除
    ///
    /// - Parameters:
    ///   - cartIds: cartIds description
    ///   - completion: completion description
    static func remove(cartIds:[String],completion:((_ code:Int,_ success:Bool,_ errorMsg:String) -> Void)?) {
        if cartIds.count > 0 {
            ZXNetwork.asyncRequest(withUrl: ZXAPI.address(image: ZXAPIConst.Cart.delete), params: ["carIds":cartIds.joined(separator: ",")], method: .post, completion: { (s, c, obj, js, error) in
                if c == ZXAPI_SUCCESS {
                    completion?(c,true,"")
                } else {
                    completion?(c,false,(error?.description)!)
                }
            })
        } else {
            completion?(-1234,false,"ID为空")
        }
    }
    
    /// 更新选中状态
    ///
    /// - Parameters:
    ///   - cartIds: nil/empty == All
    ///   - select: select description
    ///   - completion: completion description
    static func updateSelect(cartIds:[String],select:Bool,completion:((_ code:Int,_ success:Bool,_ errorMsg:String) -> Void)?) {
        var p = [String:Any]()
        p["isChosen"] = select ? "1" : "0"
        if cartIds.count > 0 {
            p["carIds"] = cartIds.joined(separator: ",")
        }
        ZXNetwork.asyncRequest(withUrl: ZXAPI.address(image: ZXAPIConst.Cart.updateSelect), params: p, method: .post, completion: { (s, c, obj, js, error) in
            if c == ZXAPI_SUCCESS {
                completion?(c,true,"")
            } else {
                completion?(c,false,(error?.description)!)
            }
        })
    }
    
    
    /// 修改规格或数量
    ///
    /// - Parameters:
    ///   - cartId: cartId description
    ///   - productId: productId description
    ///   - specProductId: specProductId description
    ///   - num: num description
    ///   - completion: completion description
    static func updateSpec_Num(cartId:String,productId:String,specProductId:String,num:Int,completion:((_ code:Int,_ success:Bool,_ errorMsg:String) -> Void)?) {
        var params = [String:Any]()
        params["carId"] = cartId
        params["productId"] = productId
        params["specProductId"] = specProductId
        params["num"] = num
        ZXNetwork.asyncRequest(withUrl: ZXAPI.address(image: ZXAPIConst.Cart.updateSpec), params: params, method: .post, completion: { (s, c, obj, js, error) in
            if c == ZXAPI_SUCCESS {
                completion?(c,true,"")
            } else {
                completion?(c,false,(error?.description)!)
            }
        })
    }
    
    //结算
    static func payMent(specProductIds:[String],specNums:[String],completion:((_ code:Int,_ success:Bool,_ model:ZXPaymentModel?,_ errorMsg:String) -> Void)?) {
        var params = [String:Any]()
        params["specProductIds"] = specProductIds.joined(separator: ",")
        params["specNums"] = specNums.joined(separator: ",")
        ZXNetwork.asyncRequest(withUrl: ZXAPI.address(image: ZXAPIConst.Cart.payment), params: params, method: .post, completion: { (s, c, obj, js, error) in
            if c == ZXAPI_SUCCESS {
                if let data = obj["data"] as? [String:Any],data.count > 0 {
                    completion?(c,true,ZXPaymentModel.mj_object(withKeyValues: data),"")
                } else {
                    completion?(c,true,nil,"")
                }
            } else {
                completion?(c,false,nil,(error?.description)!)
            }
        })

    }
    
    //下单 + 支付
    static func takeOrderAndPay() {
    
    }
}
