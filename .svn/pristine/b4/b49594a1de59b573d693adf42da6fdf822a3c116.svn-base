//
//  ZXGoodsTopImagesCell.swift
//  rbstore
//
//  Created by screson on 2017/7/28.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit


class ZXGoodsTopImagesCell: UITableViewCell {

    weak var delegate: ZXShowMoreProtocol?
    
    @IBOutlet weak var pageControl: UIPageControl!
    let lbShowDetail = ZXUILabel()
    @IBOutlet weak var ccvImgList: UICollectionView!
    override func awakeFromNib() {
        super.awakeFromNib()
        // Initialization code
        self.selectionStyle = .none
        self.contentView.backgroundColor = UIColor.white
        self.ccvImgList.delegate = self
        self.ccvImgList.dataSource = self
        self.ccvImgList.register(UINib(nibName: ZXGoodsImgCCVCell.reuseIdentifier, bundle: nil), forCellWithReuseIdentifier: ZXGoodsImgCCVCell.reuseIdentifier)
        lbShowDetail.typeIndex = 2
        lbShowDetail.textColor = UIColor.zx_textColorBody
        lbShowDetail.textAlignment = .center
        lbShowDetail.numberOfLines = 0
        lbShowDetail.lineBreakMode = .byWordWrapping
        lbShowDetail.text = "查\n看\n商\n品\n详\n情"
        lbShowDetail.frame = CGRect(x: 0, y: 0, width: 40, height: 270)
        self.ccvImgList.addSubview(lbShowDetail)
        lbShowDetail.x = 5 * ZXBOUNDS_WIDTH
        
        self.pageControl.currentPageIndicatorTintColor = UIColor.zx_tintColor
        self.pageControl.pageIndicatorTintColor = UIColor.lightGray
        self.pageControl.currentPage = 0
        self.pageControl.numberOfPages = 5
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    
    
    func reloadData() {
        
    }
    
}

extension ZXGoodsTopImagesCell: UICollectionViewDelegate,UICollectionViewDelegateFlowLayout {
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {

        return CGSize(width: ZXBOUNDS_WIDTH, height: 270)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 0
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {

        return 0
    }
}

extension ZXGoodsTopImagesCell: UICollectionViewDataSource {
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: ZXGoodsImgCCVCell.reuseIdentifier, for: indexPath) as! ZXGoodsImgCCVCell
        var url = "http://pic.90sjimg.com/back_pic/qk/back_origin_pic/00/03/14/c0391a6c1efab3fe00911b04e8cedca4.jpg"
        if indexPath.row == 0 {
            url = "http://cdn.duitang.com/uploads/item/201411/08/20141108201327_sCxZX.jpeg"
        } else if indexPath.row == 1 {
            url = "http://img4.duitang.com/uploads/item/201408/30/20140830185456_Eijik.jpeg"
        }
        cell.imgvIcon.kf.setImage(with: URL(string:url), placeholder: nil, options: nil, progressBlock: nil, completionHandler: nil)
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return 5
    }
    
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
}

extension ZXGoodsTopImagesCell: UIScrollViewDelegate {
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        let offsetx = scrollView.contentOffset.x
        if offsetx > ZXBOUNDS_WIDTH * 4 + 45 {
            lbShowDetail.text = "松\n开\n立\n即\n查\n看"
        } else {
            lbShowDetail.text = "查\n看\n商\n品\n详\n情"
        }
        let page = Int(offsetx / ZXBOUNDS_WIDTH)
        self.pageControl.currentPage = page
    }
    
    func scrollViewDidEndDragging(_ scrollView: UIScrollView, willDecelerate decelerate: Bool) {
        if scrollView.contentOffset.x >= ZXBOUNDS_WIDTH * 4 + 45 {
            delegate?.zxScrollToShowMore(type: .none)
        }
    }
}
