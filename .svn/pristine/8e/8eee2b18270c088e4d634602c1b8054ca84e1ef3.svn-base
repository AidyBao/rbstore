//
//  RBMessageDetailViewController.swift
//  rbstore
//
//  Created by 120v on 2017/8/4.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

class RBMessageDetailViewController: ZXUIViewController {
    
    @IBOutlet weak var tableView: UITableView!
    @IBOutlet weak var checkActivityBTN: UIButton!

    override func viewDidLoad() {
        super.viewDidLoad()

        self.tableView.register(UINib.init(nibName:String.init(describing: RBMessageCell.self), bundle: nil), forCellReuseIdentifier: RBMessageCell.RBMessageCellID)
        self.tableView.register(UINib.init(nibName:String.init(describing: RBMessageCell.self), bundle: nil), forCellReuseIdentifier: RBMessageCell.RBMessageCellID)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    
    @IBAction func checkActivityAction(_ sender: UIButton) {
    }

    /*
    // MARK: - Navigation

    // In a storyboard-based application, you will often want to do a little preparation before navigation
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Get the new view controller using segue.destinationViewController.
        // Pass the selected object to the new view controller.
    }
    */

}


extension RBMessageDetailViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        
        var cellH: CGFloat = 0
        switch indexPath.row {
        case 0:
            cellH = 65.0
        case 1:
            cellH = ZXBOUNDS_HEIGHT - 60 - 65
        default:
            break
        }
        return cellH
    }
}

extension RBMessageDetailViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 2
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch indexPath.row {
        case 0:
            let cell: RBMessageDetailHeader = tableView.dequeueReusableCell(withIdentifier: RBMessageDetailHeader.RBMessageDetailHeaderID, for: indexPath) as! RBMessageDetailHeader
            cell.selectionStyle = UITableViewCellSelectionStyle.none
            return cell
        case 1:
            let cell: RBMessageContentCell = tableView.dequeueReusableCell(withIdentifier: RBMessageContentCell.RBMessageContentCellID, for: indexPath) as! RBMessageContentCell
            cell.selectionStyle = UITableViewCellSelectionStyle.none
            return cell
        default:
            break
        }
        return UITableViewCell.init(style: .default, reuseIdentifier: "UNKnow")
    }
}
