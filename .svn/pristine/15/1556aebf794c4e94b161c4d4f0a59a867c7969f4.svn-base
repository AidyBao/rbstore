//
//  ZXShoppingCartViewController.swift
//  rbstore
//
//  Created by screson on 2017/7/12.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit

class ZXSelectedCartItem: NSObject {
    var item: ZXCartModel?
    var section:Int = 0
}

class ZXShoppingCartViewController: ZXUIViewController {
    
    var bEditing = false
    var cartList = [ZXCartModel]()
    @IBOutlet weak var tblOrderList: UITableView!
    
    @IBOutlet weak var bntCheckAll: UIButton!
    
    @IBOutlet weak var commitBottomBackView: UIView!
    @IBOutlet weak var btnCommit: UIButton!
    @IBOutlet weak var lbTotalPrice: UILabel!
    
    
    @IBOutlet weak var deleteBottomBackView: UIView!
    @IBOutlet weak var btnMoveToMark: UIButton!
    @IBOutlet weak var btnDelete: UIButton!
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        self.hidesBottomBarWhenPushed = false
        self.title = "购物车"
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        self.hidesBottomBarWhenPushed = false
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()

        // Do any additional setup after loading the view.
        self.view.backgroundColor = UIColor.zx_emptyColor
        
        self.tblOrderList.backgroundColor = UIColor.clear        
        self.tblOrderList.register(UINib(nibName: ZXCartTableViewCell.NibName, bundle: nil), forCellReuseIdentifier: ZXCartTableViewCell.reuseIdentifier)
        self.tblOrderList.zx_addHeaderRefresh(showGif: true, target: self, action: #selector(zx_refresh))
        
        self.bntCheckAll.isSelected = false
        self.bntCheckAll.setImage(#imageLiteral(resourceName: "zx-uncheck"), for: .normal)
        self.bntCheckAll.setImage(#imageLiteral(resourceName: "zx-check"), for: .highlighted)
        self.bntCheckAll.setImage(#imageLiteral(resourceName: "zx-check"), for: .selected)
        
        self.btnMoveToMark.titleLabel?.font = UIFont.zx_bodyFont
        self.btnMoveToMark.setTitleColor(UIColor.zx_textColorBody, for: .normal)
        self.lbTotalPrice.font = UIFont.zx_bodyFont
        self.lbTotalPrice.textColor = UIColor.zx_textColorBody
        self.setPriceText(0)
        
        self.changeToEditing(false,updateTable: false)
    }
    
    func setPriceText(_ price:Double) {
        let price = "\(price)".zx_priceFormat(color: nil)
        let total = "合计:"
        let attr = NSAttributedString.zx_fontFormat(total, font: UIFont.zx_bodyFont, at: NSMakeRange(0, 3))
        attr.append(price)
        self.lbTotalPrice.attributedText = attr

    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        if !onceLoad {
            onceLoad = true
            self.loadList()
        } else {
            self.loadList(true)
        }
    }
    
    override func zx_refresh() {
        self.loadList()
    }
    
    override func zx_rightBarButtonAction(index: Int) {
        if self.cartList.count == 0 {
            return
        }
        self.changeToEditing(!bEditing,updateTable: true)
    }
    
    fileprivate func loadList(_ showHUD:Bool = true) {
        if showHUD {
            ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: nil)
        }
        ZXCartViewModel.getCartList { (code, success, list, errorMsg) in
            ZXEmptyView.hide(from: self.view)
            ZXHUD.hide(for: self.view, animated: true)
            self.tblOrderList.mj_header.endRefreshing()
            if success {
                if let list = list {
                    self.cartList = list
                }
                self.updateUIAction()
            } else {
                ZXNetwork.errorCodeParse(code, httpError: { 
                    ZXEmptyView.show(in: self.view, type: .networkError, text: ZX_NETWORK_ERROR, retry: { 
                        self.loadList()
                    })
                }, serverError: { 
                    ZXEmptyView.show(in: self.view, type: .networkError, text: errorMsg, retry: { 
                        self.loadList()
                    })
                })
            }
        }
    }
    
    func updateUIAction(needUpdateTable:Bool = true) {
        if self.cartList.count == 0 {
            ZXEmptyView.show(in: self.view, type: .cartEmpty, text: nil, retry: {
                self.loadList()
            })
            self.changeToEditing(false, updateTable: false)
        }
        
        if needUpdateTable {
            self.tblOrderList.reloadData()
        }
        
        if self.zx_isAllGoodsChecked() {
            self.bntCheckAll.isSelected = true
        } else {
            self.bntCheckAll.isSelected = false
        }
        
        self.setPriceText(self.zx_totalPrice())
        
        //更新数字
        ZXHomePageViewModel.badgeUpdate()
    }

    fileprivate func changeToEditing(_ editing:Bool,updateTable:Bool) {
        if editing {
            self.zx_addNavBarButtonItems(textNames: ["完成"], font: nil, color: nil, at: .right)
            bEditing = true
            self.deleteBottomBackView.isHidden = false
            self.commitBottomBackView.isHidden = true
        } else {
            self.zx_addNavBarButtonItems(textNames: ["编辑"], font: nil, color: nil, at: .right)
            bEditing = false
            self.deleteBottomBackView.isHidden = true
            self.commitBottomBackView.isHidden = false
        }
        if updateTable {
            self.tblOrderList.reloadData()
        }
    }

    
    func zx_isAllGoodsChecked() -> Bool {
        if self.cartList.count > 0 {
            var isAllChecked = true
            for c in self.cartList {
                //只检测有效的状态
                if c.zx_status == .inSale,!c.zx_isChosen {
                    isAllChecked = false
                    break
                }
            }
            return isAllChecked
        }
        return false
    }
    
    func zx_selectedList() -> [ZXSelectedCartItem] {
        var list = [ZXSelectedCartItem]()
        if self.cartList.count > 0 {
            for (idx,c) in self.cartList.enumerated() {
                //只检测有效的状态
                if c.zx_status == .inSale,c.zx_isChosen {
                    let item = ZXSelectedCartItem()
                    item.item = c
                    item.section = idx
                    list.append(item)
                }
            }
        }
        return list
    }
    
    func zx_totalPrice() -> Double {
        var price:Double = 0
        let list = self.zx_selectedList()
        for c in list {
            if let item = c.item {
                price += item.salePrice * Double(item.num)
            }
        }
        return price
    }
    
    //MARK: - Button Action
    //MARK: - 全选
    @IBAction func checkAllAction(_ sender: UIButton) {
        //ZXEmptyView.show(in: self.tblOrderList, type: .cartEmtpy, text: "购物车空的哦\n去首页看看", retry: nil)
        if self.cartList.count > 0 {
            if self.bntCheckAll.isSelected {
                ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: nil)
                ZXCartViewModel.updateSelect(cartIds: [], select: false, completion: { (c, s, errorMsg) in
                    ZXHUD.hide(for: self.view, animated: true)
                    if s {
                        self.bntCheckAll.isSelected = false
                        for c in self.cartList {
                            c.isChosen = 0
                        }
                        self.updateUIAction()
                    } else {
                        ZXNetwork.errorCodeParse(c, httpError: { 
                            ZXHUD.showFailure(in: self.view, text: ZX_NETWORK_ERROR, delay: ZXConst.zxdelayTime)
                        }, serverError: {
                            ZXHUD.showFailure(in: self.view, text: errorMsg, delay: ZXConst.zxdelayTime)
                        })
                    }
                })
            } else {
                ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: nil)
                ZXCartViewModel.updateSelect(cartIds: [], select: true, completion: { (c, s, errorMsg) in
                    ZXHUD.hide(for: self.view, animated: true)
                    if s {
                        self.bntCheckAll.isSelected = true
                        for c in self.cartList {
                            c.isChosen = 1
                        }
                        self.updateUIAction()
                    } else {
                        ZXNetwork.errorCodeParse(c, httpError: {
                            ZXHUD.showFailure(in: self.view, text: ZX_NETWORK_ERROR, delay: ZXConst.zxdelayTime)
                        }, serverError: {
                            ZXHUD.showFailure(in: self.view, text: errorMsg, delay: ZXConst.zxdelayTime)
                        })
                    }
                })
            }
        } else {
            self.bntCheckAll.isSelected = false
        }
    }
    
    //MARK: - 结算
    @IBAction func commitAction(_ sender: UIButton) {
        if self.zx_selectedList().count > 0 {
            let takeOrder = ZXTakeOrderViewController()
            self.navigationController?.pushViewController(takeOrder, animated: true)
        } else {
            ZXHUD.showText(in: self.view, text: "请选择商品", delay: ZXConst.zxdelayTime)
        }
    }
    
    //MARK: - 删除
    @IBAction func deleteAction(_ sender: UIButton) {
        let list = self.zx_selectedList()
        if list.count > 0 {
            ZXAlertUtils.showActionSheet(withTitle: "", message: "确定删除这\(self.cartList.count)种商品", buttonTexts: ["确定"], cancelText: nil) { (index) in
                if index == 0 {
                    var array = [Int]()
                    for item in self.zx_selectedList() {
                        array.append(item.section)
                    }
                    self.removeCell(at: array, type: .delete)
                }
            }
        } else {
            ZXHUD.showText(in: self.view, text: "请选择商品", delay: ZXConst.zxdelayTime)
        }
    }
    
    //MARK: - 移入收藏
    @IBAction func moveToMarkAction(_ sender: UIButton) {
        let list = self.zx_selectedList()
        if list.count > 0 {
            ZXAlertUtils.showActionSheet(withTitle: "", message: "确定将这\(self.cartList.count)种商品移入收藏夹", buttonTexts: ["确定"], cancelText: nil) { (index) in
                if index == 0 {
                    var array = [Int]()
                    for item in self.zx_selectedList() {
                        array.append(item.section)
                    }
                    self.removeCell(at: array, type: .mark)
                }
            }
        } else {
            ZXHUD.showText(in: self.view, text: "请选择商品", delay: ZXConst.zxdelayTime)
        }
    }
}
