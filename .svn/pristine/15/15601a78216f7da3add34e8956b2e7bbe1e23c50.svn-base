//
//  RBMessageContentCell.swift
//  
//
//  Created by 120v on 2017/8/4.
//
//

import UIKit

protocol RBMessageContentCellDelegate: NSObjectProtocol {
    func getCellHeight(_ cellHeight:CGFloat, _ cell:RBMessageContentCell) -> Void
}

class RBMessageContentCell: UITableViewCell {
    
    static let RBMessageContentCellID: String = "RBMessageContentCell"
    
    @IBOutlet weak var webView: UIWebView!
    weak var delegate: RBMessageContentCellDelegate?
    var cellHeight:CGFloat = 0

    override func awakeFromNib() {
        super.awakeFromNib()
        self.contentView.backgroundColor = UIColor.groupTableViewBackground
        self.webView.backgroundColor = UIColor.groupTableViewBackground
        
        self.webView.delegate = self
        self.webView.scrollView.isScrollEnabled = false

        
    }
    
    func loadWebView(_ string:String) ->Void{
//        let content:NSMutableString = NSMutableString.init(string: "")
//        if string.isEmpty == false {
//            content.append(string)
//        }
//        self.webView.loadHTMLString(content as String, baseURL: nil)
        
        self.webView.loadRequest(URLRequest.init(url: URL.init(string: "http://news.sina.com.cn/china/xlxw/2017-07-28/doc-ifyinryq6615098.shtml")!))
    }
    
    override func layoutSubviews() {
        super.layoutSubviews()
        self.contentView.height = webView.scrollView.contentSize.height
    }


    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)

        // Configure the view for the selected state
    }
    
}

extension RBMessageContentCell:UIWebViewDelegate {
    func webViewDidFinishLoad(_ webView: UIWebView) {
        
        //self.webView.stringByEvaluatingJavaScript(from: "document.documentElement.style.webkitUserSelect='none'")
        //self.webView.stringByEvaluatingJavaScript(from: "document.documentElement.style.webkitTouchCallout='none'")
        self.webView.stringByEvaluatingJavaScript(from: "document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '95%'")
        self.webView.stringByEvaluatingJavaScript(from: "document.getElementsByTagName('body')[0].style.webkitTextFillColor= 'gray'")
        self.webView.stringByEvaluatingJavaScript(from: "document.getElementsByTagName('body')[0].style.background='#EFEFF4'")
        
        var frame:CGRect = webView.frame
        frame.size.width = ZX_BOUNDS_WIDTH
        frame.size.height = webView.scrollView.contentSize.height
        webView.frame = frame
        
        self.cellHeight = webView.height
        
        if delegate != nil {
            delegate?.getCellHeight(webView.scrollView.contentSize.height,self)
        }
    }
    
    func webView(_ webView: UIWebView, didFailLoadWithError error: Error) {
        print(error)
        
    }
}


