//
//  ZXGoodsDetail+Table.swift
//  rbstore
//
//  Created by screson on 2017/7/28.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit
import JXPhotoBrowser

extension ZXGoodsDetailViewController: UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        switch indexPath.section {
        case 0: //商品图片
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXGoodsTopImagesCell.reuseIdentifier, for: indexPath) as! ZXGoodsTopImagesCell
            cell.delegate = self
            return cell
        case 1: //名称 价格
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXGoodsDetailInfoCell.reuseIdentifier, for: indexPath) as! ZXGoodsDetailInfoCell
            return cell
        case 2:// 运费
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXLRTableViewCell.reuseIdentifier, for: indexPath) as! ZXLRTableViewCell
            cell.reloadData(cornerType: .none, lineType: .top, showArrow: true)
            cell.lbLeftText.text = "运费说明："
            cell.backgroundColor = UIColor.white
            cell.lbRightText.text = ""
            return cell
        case 3:// 规格
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXLRTableViewCell.reuseIdentifier, for: indexPath) as! ZXLRTableViewCell
            cell.reloadData(cornerType: .none, lineType: .top, showArrow: true)
            cell.lbLeftText.text = "规格数量选择："
            cell.lbRightText.text = ""
            return cell
        case 4://空白行，避免Header悬浮时，Footer带来的不必要的悬浮
            let cell = tableView.dequeueReusableCell(withIdentifier: UITableViewCell.reuseIdentifier, for: indexPath)
            cell.backgroundColor = UIColor.zx_emptyColor
            return cell
        case 5://推荐标题
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXSingleTextCell.reuseIdentifier, for: indexPath) as! ZXSingleTextCell
            cell.setText("- 同 类 推 荐 -")
            return cell
        case 6:// 推荐商品
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXHorizontalTableCell.reuseIdentifier, for: indexPath) as! ZXHorizontalTableCell
            cell.type = .white
            cell.backgroundColor = UIColor.white
            return cell
        case 7://空白行，避免Header悬浮时，Footer带来的不必要的悬浮
            let cell = tableView.dequeueReusableCell(withIdentifier: UITableViewCell.reuseIdentifier, for: indexPath)
            cell.backgroundColor = UIColor.zx_emptyColor
            return cell
        case 8://webDeteial
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXGoodsWebDetailIInfoCell.reuseIdentifier, for: indexPath) as! ZXGoodsWebDetailIInfoCell
            return cell
        default:
            let cell = tableView.dequeueReusableCell(withIdentifier: ZXLRTableViewCell.reuseIdentifier, for: indexPath) as! ZXLRTableViewCell
            cell.backgroundColor = UIColor.white
            return cell
        }
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 9
    }
}

extension ZXGoodsDetailViewController: UITableViewDelegate {
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        DispatchQueue.main.async { 
            switch indexPath.section {
                case 2:
                    let freight = ZXFreightInfoViewController()
                    self.present(freight, animated: true, completion: nil)
                case 3:
                    self.showSpecSelect()
                default:
                    break
            }
        }
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        switch indexPath.section {
            case 0:
                return 270
            case 1,8:
                return UITableViewAutomaticDimension
            case 2,5:
                return 45
            case 5:
                return 28
            case 6:
                return ZXHorizontalTableCell.height
            case 4,7:
                return 12
            default:
                return 44
        }
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        if section == 8 {
            let header = tableView.dequeueReusableHeaderFooterView(withIdentifier: ZXGoodsDetailParamsHeader.reuseIdentifier) as! ZXGoodsDetailParamsHeader
            return header
        }
        return nil
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        if section == 8 {
            return 44
        }
        return CGFloat.leastNormalMagnitude
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return CGFloat.leastNormalMagnitude
    }
}

extension ZXGoodsDetailViewController: UIScrollViewDelegate {
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        if scrollView.contentOffset.y >= 270 - 64 {
            self.showNavBarBackgroundColor(true)
        } else {
            self.showNavBarBackgroundColor(false)
        }
    }
}

extension ZXGoodsDetailViewController: ZXShowMoreProtocol {
    func zxScrollToShowMore(type: ZXShowMoreType) {
        self.tblList.scrollToRow(at: IndexPath(row: 0, section: 8), at: .none, animated: true)
//        if let cell = self.tblList.cellForRow(at: IndexPath(row: 0, section: 7)) {
//            let point = cell.convert(cell.frame.origin, to: self.tblList)
//            self.tblList.setContentOffset(CGPoint(x:0,y:point.y + 12), animated: true)
//        }
    }
    
    func zxGoodsTopImageSelected(at index: Int, for cell: ZXGoodsTopImagesCell) {
        let browser = PhotoBrowser(showByViewController: self, delegate: self)
        let pDelegate = PhotoBrowserNumberPageControlDelegate(numberOfPages: 5)
        pDelegate.centerY = ZXBOUNDS_HEIGHT - 60
        browser.pageControlDelegate = pDelegate
        browser.show(index: index)
    }
}

extension ZXGoodsDetailViewController: PhotoBrowserDelegate {
    func numberOfPhotos(in photoBrowser: PhotoBrowser) -> Int {
        return 5
    }
    
    func photoBrowser(_ photoBrowser: PhotoBrowser, rawUrlForIndex index: Int) -> URL? {
        var url = "http://pic.90sjimg.com/back_pic/qk/back_origin_pic/00/03/14/c0391a6c1efab3fe00911b04e8cedca4.jpg"
        if index == 0 {
            url = "http://cdn.duitang.com/uploads/item/201411/08/20141108201327_sCxZX.jpeg"
        } else if index == 1 {
            url = "http://img4.duitang.com/uploads/item/201408/30/20140830185456_Eijik.jpeg"
        }
        return URL(string: url)
    }
    
    /// 实现本方法以返回默认图片，缩略图或占位图
    func photoBrowser(_ photoBrowser: PhotoBrowser, thumbnailImageForIndex index: Int) -> UIImage? {
        return UIImage.Default.goods
    }
    
    /// 实现本方法以返回默认图所在view，在转场动画完成后将会修改这个view的hidden属性
    /// 比如你可返回ImageView，或整个Cell
    func photoBrowser(_ photoBrowser: PhotoBrowser, thumbnailViewForIndex index: Int) -> UIView? {
        
        let cell = self.tblList.cellForRow(at: IndexPath(row: 0, section: 0))
        return cell
    }

}

