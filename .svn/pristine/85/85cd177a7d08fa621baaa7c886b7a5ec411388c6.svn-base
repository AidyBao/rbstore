//
//  ZXGoodsDetailViewController.swift
//  rbstore
//
//  Created by screson on 2017/7/24.
//  Copyright © 2017年 screson. All rights reserved.
//

import UIKit
import JXPhotoBrowser

class ZXGoodsDetailViewController: ZXUIViewController,UIGestureRecognizerDelegate {

    var showGoodsParams = false
    
    var goodsModel: ZXRecommendGoodsModel?
    var goodsDetailModel: ZXGoodsDetailModel?
    fileprivate var showTintNav = false

    @IBOutlet weak var tblList: UITableView!
    
    @IBOutlet weak var bottomControlView: UIView!
    @IBOutlet weak var btnCall: UIButton!
    @IBOutlet weak var lbSeperatorLine: UIView!
    @IBOutlet weak var btnMark: UIButton!
    @IBOutlet weak var lbOutofSale: ZXUILabel!
    
    @IBOutlet weak var btnBuyNow: UIButton!
    @IBOutlet weak var btnAddToCart: UIButton!
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        if self.tblList.contentOffset.y >= 270 - 64 {
            self.showNavBarBackgroundColor(true)
        } else {
            self.showNavBarBackgroundColor(false)
        }
        navigationController?.interactivePopGestureRecognizer?.delegate = self
        navigationController?.interactivePopGestureRecognizer?.isEnabled = true
        if !onceLoad {
            onceLoad = true
            self.loadDetailInfo()
        }
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        self.showNavBarBackgroundColor(true)
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
        self.showNavBarShadow(false)
        self.automaticallyAdjustsScrollViewInsets = false
        self.view.backgroundColor = UIColor.zx_backgroundColor
        self.bottomControlView.isHidden = true

        self.tblList.backgroundColor = UIColor.clear
        
        //self.tblList.contentInset = UIEdgeInsets(top: 270, left: 0, bottom: 0, right: 0)
        //商品图片
        self.tblList.register(UINib(nibName: ZXGoodsTopImagesCell.NibName, bundle: nil), forCellReuseIdentifier: ZXGoodsTopImagesCell.reuseIdentifier)
        // 名称 价格
        self.tblList.register(UINib(nibName: ZXGoodsDetailInfoCell.NibName, bundle: nil), forCellReuseIdentifier: ZXGoodsDetailInfoCell.reuseIdentifier)
        // 运费 规格
        self.tblList.register(UINib(nibName: ZXLRTableViewCell.NibName, bundle: nil), forCellReuseIdentifier: ZXLRTableViewCell.reuseIdentifier)
        // 单行文字
        self.tblList.register(UINib(nibName: ZXSingleTextCell.NibName, bundle: nil), forCellReuseIdentifier: ZXSingleTextCell.reuseIdentifier)
        self.tblList.register(UINib(nibName: ZXHorizontalTableCell.NibName, bundle: nil), forCellReuseIdentifier: ZXHorizontalTableCell.reuseIdentifier)
        // 商品详情 商品参数header
        self.tblList.register(ZXGoodsDetailParamsHeader.self, forHeaderFooterViewReuseIdentifier: ZXGoodsDetailParamsHeader.reuseIdentifier)
        // web商品详情 商品参数
        self.tblList.register(UINib(nibName: ZXGoodsWebDetailIInfoCell.NibName, bundle: nil), forCellReuseIdentifier: ZXGoodsWebDetailIInfoCell.reuseIdentifier)
        //空行
        self.tblList.register(UITableViewCell.self, forCellReuseIdentifier: UITableViewCell.reuseIdentifier)

        self.tblList.estimatedRowHeight = 70
        
        self.btnCall.titleLabel?.font = UIFont.zx_bodyFont
        self.btnCall.setTitleColor(UIColor.zx_textColorBody, for: .normal)
        self.btnMark.titleLabel?.font = UIFont.zx_bodyFont
        self.btnMark.setTitleColor(UIColor.zx_textColorBody, for: .normal)
        self.btnMark.setTitleColor(UIColor.zx_tintColor, for: .selected)
        self.btnMark.setTitle("收藏", for: .normal)
        self.btnMark.setTitle("已收藏", for: .selected)
        
        self.btnBuyNow.titleLabel?.font = UIFont.zx_titleFont
        self.btnBuyNow.setTitleColor(UIColor.white, for: .normal)
        self.btnBuyNow.backgroundColor = UIColor.zx_customBColor
        self.btnAddToCart.titleLabel?.font = UIFont.zx_titleFont
        self.btnAddToCart.setTitleColor(UIColor.white, for: .normal)
        self.btnAddToCart.backgroundColor = UIColor.zx_tintColor
    }
    
    fileprivate func loadDetailInfo() {
        if let model = self.goodsModel{
            ZXHUD.showLoading(in: self.view, text: ZX_LOADING_TEXT, delay: nil)
            ZXGoodsViewModel.getGoodsDetail(productId: model.productId, specProductId: model.specProductId, completion: { (code, success, detailModel, errorMsg) in
                ZXHUD.hide(for: self.view, animated: true)
                if success {
                    if let model = detailModel {
                        self.goodsDetailModel = model
                    } else {
                        //ZXHUD.showFailure(in: self.view, text: "商品信息不存在", delay: ZXConst.zxdelayTime)
                        ZXEmptyView.show(in: self.view, type: .noData, text: "商品信息不存在")
                    }
                } else {
                    ZXNetwork.errorCodeParse(code, httpError: { 
                        ZXEmptyView.show(in: self.view, type: .networkError, text: nil, retry: { 
                            self.loadDetailInfo()
                        })
                    }, serverError: { 
                        //ZXHUD.showFailure(in: self.view, text: errorMsg, delay: ZXConst.zxdelayTime)
                        ZXEmptyView.show(in: self.view, type: .noData, text: errorMsg, retry: {
                            self.loadDetailInfo()
                        })
                    })
                }
                self.updateAction()
            })
        } else {
            //ZXHUD.showFailure(in: self.view, text: "商品信息不存在", delay: ZXConst.zxdelayTime)
            ZXEmptyView.show(in: self.view, type: .noData, text: "商品信息不存在")
        }
    }
    
    fileprivate func updateAction() {
        if self.goodsDetailModel != nil {
            self.bottomControlView.isHidden = false
        }
        self.tblList.reloadData()
    }
    
    @IBAction func callAction(_ sender: Any) {
        ZXCommonUtils.call("18081003733")
    }

    @IBAction func markAction(_ sender: Any) {
        self.btnMark.isSelected = !self.btnMark.isSelected
    }
    
    @IBAction func buyAction(_ sender: Any) {
        self.showSpecSelect(.buyNow)
    }
    
    @IBAction func addToCartAction(_ sender: Any) {
        self.showSpecSelect(.addToCart)
    }
    
    
    func showSpecSelect(_ type:ZXSpecSelectType = .none) {
        let specSelect = ZXGoodsSpecViewController()
        specSelect.type = type
        self.present(specSelect, animated: true, completion: nil)
    }
    
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return showTintNav ? .lightContent : .default
    }
    
    func showNavBarBackgroundColor(_ show:Bool) {
        if show {
            showTintNav = true
            self.zx_setNavBarBackgroundColor(UIColor.zx_navBarColor)
            self.navigationItem.leftBarButtonItem = nil
            if let model = self.goodsDetailModel {
                self.title = model.product?.title ?? "商品详情"
            } else {
                self.title = "商品详情"
            }
            self.zx_addNavBarButtonItems(imageNames: ["zxwhitecart"], useOriginalColor: false, at: .right)
        } else {
            showTintNav = false
            self.title = nil
            self.zx_setNavBarBackgroundColor(UIColor.clear)
            self.zx_addNavBarButtonItems(imageNames: ["zxcartback"], useOriginalColor: true, at: .left)
            self.zx_addNavBarButtonItems(imageNames: ["zxtoCart"], useOriginalColor: true, at: .right)
        }
        self.showNavBarShadow(show)
        self.setNeedsStatusBarAppearanceUpdate()
    }
    
    override func zx_rightBarButtonAction(index: Int) {
        ZXRouter.showDetail(type: .shoppingCart, model: nil)
    }
    
    override func zx_leftBarButtonAction(index: Int) {
        self.navigationController?.popViewController(animated: true)
    }
}
